-- Create the google_analytics_data table to store Google Analytics data for projects
CREATE TABLE IF NOT EXISTS public.google_analytics_data (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id BIGINT NOT NULL REFERENCES public.projects(id) ON DELETE CASCADE,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    metrics JSONB NOT NULL,
    dimensions JSONB NOT NULL,
    data JSONB NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ
);

-- Add indexes for better query performance
CREATE INDEX IF NOT EXISTS google_analytics_data_project_id_idx ON public.google_analytics_data (project_id);
CREATE INDEX IF NOT EXISTS google_analytics_data_date_range_idx ON public.google_analytics_data (start_date, end_date);

-- Set up RLS (Row Level Security) if needed
ALTER TABLE public.google_analytics_data ENABLE ROW LEVEL SECURITY;

-- Create a more permissive policy for now
-- You'll want to customize this with your actual access control table later
CREATE POLICY google_analytics_data_select_policy 
    ON public.google_analytics_data 
    FOR SELECT
    USING (true);
    
-- Note: This policy allows anyone to read the Google Analytics data
-- For production use, replace this with a proper policy that checks user permissions
-- Example once you have a project_users table:
-- USING (EXISTS (SELECT 1 FROM public.project_users pu 
--                WHERE pu.project_id = google_analytics_data.project_id 
--                AND pu.user_id = auth.uid()));


COMMENT ON TABLE public.google_analytics_data IS 'Stores Google Analytics data for projects';
